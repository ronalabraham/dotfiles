# -----------------------------------------------------------------------------
#                              TMUX Configuration
#------------------------------------------------------------------------------

# Environment Variables
# -----------------------------------------------------------------------------
# checks if current pane title contains "vim(forced)"
IS_VIM_PANE_T="tmux display -p '#{pane_title}' | grep -iq 'vim(forced)'"

# detects if current pane is running vim; note that this overrides the
# environment variable from tmux_common.conf; it additionally checks if the
# pane title contains "vim(forced)"
IS_VIM="$IS_VIM_PANE_T \
        || ps -o state= -o comm= -t '#{pane_tty}' \
            | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Bindings
#------------------------------------------------------------------------------
# set Ctrl-w as the default prefix key combination
unbind-key C-b
set -g prefix C-w

# vi-style copying and pasting (note: 'prefix C-[' enters copy mode)
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
    # 'v' starts selection
bind-key -Tcopy-mode-vi 'C-q' send -X rectangle-toggle
    # 'Ctrl+q' toggles block selection
bind-key -Tcopy-mode-vi 'C-j' send -X halfpage-down
    # 'Ctrl+j' moves half-page down
bind-key -Tcopy-mode-vi 'C-k' send -X halfpage-up
    # 'Ctrl+k' moves half-page up
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
    # 'v' yanks selection
bind-key -Tcopy-mode-vi 'q' send -X cancel
    # 'q' exits copy mode

# 'prefix v' to toggle current pane title between the current pane command (the
# default, as set by ~/.bash_tmux) and "vim(forced)". Forcing the pane title to
# "vim(forced)" makes the "$IS_VIM" shell-command succeed.
bind-key v if-shell "$IS_VIM_PANE_T" "select-pane -T '#{pane_current_command}'" "select-pane -T 'vim(forced)'"

# tmux- and vim-aware pane navigation and management
#   https://github.com/christoomey/vim-tmux-navigator
# 'Alt h' to move one pane left
# 'Alt j' to move one pane down
# 'Alt k' to move one pane up
# 'Alt l' to move one pane right
# 'prefix |' to split horizontally (and cd to the current pane's path)
# 'prefix -' to split vertically (and cd to the current pane's path)
# 'prefix x' to kill a pane
bind-key -n  M-h if-shell "$IS_VIM" "send-keys M-h"   "select-pane -L"
bind-key -n  M-j if-shell "$IS_VIM" "send-keys M-j"   "select-pane -D"
bind-key -n  M-k if-shell "$IS_VIM" "send-keys M-k"   "select-pane -U"
bind-key -n  M-l if-shell "$IS_VIM" "send-keys M-l"   "select-pane -R"
bind-key |  if-shell "$IS_VIM" "send-keys C-w |" "split-window -h -c '#{pane_current_path}'"
bind-key _  if-shell "$IS_VIM" "send-keys C-w _" "split-window -v -c '#{pane_current_path}'"
bind-key x  if-shell "$IS_VIM" "send-keys C-w x" "kill-pane"

# 'Alt ←' to move one pane left (vim-agnostic)
# 'Alt ↓' to move one pane down (vim-agnostic)
# 'Alt ↑' to move one pane up (vim-agnostic)
# 'Alt →' to move one pane right (vim-agnostic)
bind-key -n  M-Left select-pane -L
bind-key -n  M-Down select-pane -D
bind-key -n  M-Up select-pane -U
bind-key -n  M-Right select-pane -R

# 'prefix "' to split horizontally (vim-agnostic)
# 'prefix %' to split vertically (vim-agnostic)
bind-key '"' split-window -v -c "#{pane_current_path}"
bind-key %   split-window -h -c "#{pane_current_path}"

# 'prefix <' to set pane title
bind-key < command-prompt -p "(set-pane-title)" 'select-pane -T "%%"'

# 'prefix r' reloads ~/.tmux.conf
bind-key r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# 'prefix p' displays pane numbers
bind-key p display-panes

# 'prefix i' enables some basic bash preferences
bind-key i send-keys "set -o vi;\
 bind '\"jk\":vi-movement-mode';\
 bind '\"\\C-l\": clear-screen';\
 alias l='ls -ltr';\
 alias q='logout'" Enter

# Mouse control
# -----------------------------------------------------------------------------
set -g mouse on

# tmux-better-mouse-mode plugin settings
set -g @scroll-speed-num-lines-per-scroll 3
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"

# Colors
# -----------------------------------------------------------------------------
set -g default-terminal "screen-256color"

# Pane border
# -----------------------------------------------------------------------------
set -g pane-border-status top
set -g pane-border-format "#{pane_index}: #{pane_title}"

# Status Bar
# -----------------------------------------------------------------------------
set -g status on         # turn the status bar on
set -g status-interval 5 # set update frequency

# Notifications
# -----------------------------------------------------------------------------
# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# Clipboard
# -----------------------------------------------------------------------------
# This needed to make the vim plugin `vim-oscyank` work when running vim
# remotely in a local tmux session, and is also needed when running vim in a
# remote tmux session. This is documented here:
#
#     https://github.com/ojroques/vim-oscyank?tab=readme-ov-file#installation
set -s set-clipboard on
%if #{&&:#{m/r:^[0-9]+\.[0-9]+$,#{version}},#{e|>=|f:#{version},3.2}}
    set -as terminal-features ',screen-256color:clipboard'
%else
    set -as terminal-overrides ',screen-256color:Ms=\E]52;%p1%s;%p2%s\007'
%endif

# Miscellaneous
# -----------------------------------------------------------------------------
# use vi mode keys
setw -g mode-keys vi

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# allow local customization in ~/.tmux.conf_local
if-shell "[ -f ~/.tmux.conf_local ]" 'source ~/.tmux.conf_local'

# no escape meta key-sequence delay
set -sg escape-time 0

# time that panes are displayed (see display-panes above)
set -g display-panes-time 2000

# Plugins
# -----------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'egel/tmux-gruvbox'

# other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# plugins to try:
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-copycat'

# Plugin Settings
# -----------------------------------------------------------------------------
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default
set -g @tmux-gruvbox 'dark'

# Plugins
# -----------------------------------------------------------------------------
run-shell '~/.tmux/plugins/tpm/tpm' # initialize TMUX plugin manager (keep this
                                    # line at the very bottom)
